name: testing
on: push

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    # Docker Hub image that `container-job` executes in
    # container: python:buster
    container: python:3.9-buster

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2
      # - name: Set up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          apt-get update --yes --quiet && apt-get install --yes --quiet --no-install-recommends \
          build-essential \
          libpq-dev \
          libmariadbclient-dev \
          libjpeg62-turbo-dev \
          zlib1g-dev \
          libwebp-dev 
          python -m pip install --upgrade pip
          pip install poetry tox tox-gh-actions
          poetry install
      - name: Run TestCases
        env:
          DB_NAME: postgres
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: postgres
        run: |
          poetry run pytest
